{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\OneDrive\\\\Desktop\\\\finance_tracker_main\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from 'react';\nimport { logout as apiLogout } from '../services/authService';\nimport { setAuthToken } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport default function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    if (storedUser && storedToken) {\n      setUser(JSON.parse(storedUser));\n      setToken(storedToken);\n      setAuthToken(storedToken);\n      console.log('AuthContext: Loaded token from localStorage:', storedToken.substring(0, 10) + '...');\n    } else {\n      console.log('AuthContext: No token or user found in localStorage');\n    }\n  }, []);\n  const login = userData => {\n    setUser(userData.user);\n    setToken(userData.token);\n    localStorage.setItem('user', JSON.stringify(userData.user));\n    localStorage.setItem('token', userData.token);\n    setAuthToken(userData.token);\n    console.log('AuthContext: Logged in with token:', userData.token.substring(0, 10) + '...');\n  };\n  const logout = async () => {\n    await apiLogout();\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    setAuthToken(null);\n    console.log('AuthContext: Logged out, token removed');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"cANLe8RtnwDE5y1hInrXoZDdgy8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","logout","apiLogout","setAuthToken","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","setToken","storedUser","localStorage","getItem","storedToken","JSON","parse","console","log","substring","login","userData","setItem","stringify","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mohit/OneDrive/Desktop/finance_tracker_main/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\r\nimport { logout as apiLogout } from '../services/authService';\r\nimport { setAuthToken } from '../services/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    const storedToken = localStorage.getItem('token');\r\n    if (storedUser && storedToken) {\r\n      setUser(JSON.parse(storedUser));\r\n      setToken(storedToken);\r\n      setAuthToken(storedToken);\r\n      console.log('AuthContext: Loaded token from localStorage:', storedToken.substring(0, 10) + '...');\r\n    } else {\r\n      console.log('AuthContext: No token or user found in localStorage');\r\n    }\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    setUser(userData.user);\r\n    setToken(userData.token);\r\n    localStorage.setItem('user', JSON.stringify(userData.user));\r\n    localStorage.setItem('token', userData.token);\r\n    setAuthToken(userData.token);\r\n    console.log('AuthContext: Logged in with token:', userData.token.substring(0, 10) + '...');\r\n  };\r\n\r\n  const logout = async () => {\r\n    await apiLogout();\r\n    setUser(null);\r\n    setToken(null);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    setAuthToken(null);\r\n    console.log('AuthContext: Logged out, token removed');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,MAAM,IAAIC,SAAS,QAAQ,yBAAyB;AAC7D,SAASC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAE1C,eAAe,SAASS,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,WAAW,GAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,IAAIF,UAAU,IAAIG,WAAW,EAAE;MAC7BN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;MAC/BD,QAAQ,CAACI,WAAW,CAAC;MACrBd,YAAY,CAACc,WAAW,CAAC;MACzBG,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEJ,WAAW,CAACK,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;IACnG,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;IACpE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,KAAK,GAAIC,QAAQ,IAAK;IAC1Bb,OAAO,CAACa,QAAQ,CAACd,IAAI,CAAC;IACtBG,QAAQ,CAACW,QAAQ,CAACZ,KAAK,CAAC;IACxBG,YAAY,CAACU,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACF,QAAQ,CAACd,IAAI,CAAC,CAAC;IAC3DK,YAAY,CAACU,OAAO,CAAC,OAAO,EAAED,QAAQ,CAACZ,KAAK,CAAC;IAC7CT,YAAY,CAACqB,QAAQ,CAACZ,KAAK,CAAC;IAC5BQ,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEG,QAAQ,CAACZ,KAAK,CAACU,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC;EAC5F,CAAC;EAED,MAAMrB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,SAAS,CAAC,CAAC;IACjBS,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdE,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IAC/BZ,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCxB,YAAY,CAAC,IAAI,CAAC;IAClBiB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACvD,CAAC;EAED,oBACEhB,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,IAAI;MAAEE,KAAK;MAAEW,KAAK;MAAEtB;IAAO,CAAE;IAAAO,QAAA,EACzDA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACxB,EAAA,CAzCuBF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}