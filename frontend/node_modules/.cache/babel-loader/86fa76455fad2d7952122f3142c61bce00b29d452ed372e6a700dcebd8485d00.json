{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\OneDrive\\\\Desktop\\\\finance_tracker_main\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport TransactionForm from '../components/TransactionForm';\nimport TransactionList from '../components/TransactionList';\nimport { getTransactions } from '../services/transactionService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [startDate, setStartDate] = useState('2025-07-01');\n  const [endDate, setEndDate] = useState('2025-07-07'); // Extended to ensure 7/6/2025 is included\n\n  useEffect(() => {\n    fetchTransactions();\n  }, [startDate, endDate]);\n  const fetchTransactions = async () => {\n    try {\n      const response = await getTransactions({\n        page: 1,\n        startDate,\n        endDate\n      });\n      console.log('Dashboard.jsx: Fetched transactions:', JSON.stringify(response.transactions, null, 2)); // Detailed debug log\n      setTransactions(response.transactions || []);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n\n  // Prepare data for Expenses by Category (Bar Chart) with cap\n  const expensesByCategory = transactions.filter(t => t.type === 'expense').map(t => ({\n    ...t,\n    amount: Math.min(Math.abs(t.amount), 10000) * (t.amount < 0 ? -1 : 1)\n  })) // Cap and preserve sign\n  .reduce((acc, t) => {\n    acc[t.category] = (acc[t.category] || 0) + t.amount;\n    return acc;\n  }, {});\n  const categoryLabels = Object.keys(expensesByCategory);\n  const categoryData = Object.values(expensesByCategory);\n\n  // Prepare data for Expenses by Date (Line Chart) with cap\n  const expensesByDate = transactions.filter(t => t.type === 'expense').map(t => ({\n    ...t,\n    amount: Math.min(Math.abs(t.amount), 10000) * (t.amount < 0 ? -1 : 1)\n  })) // Cap and preserve sign\n  .reduce((acc, t) => {\n    const date = new Date(t.date).toLocaleDateString();\n    acc[date] = (acc[date] || 0) + t.amount;\n    return acc;\n  }, {});\n  const dateLabels = Object.keys(expensesByDate).sort();\n  const dateData = Object.values(expensesByDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(TransactionForm, {\n          onAdd: fetchTransactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Charts (Static Preview)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Charts cannot be rendered interactively due to canvas panel limitations. Below are static previews based on capped data (max 10,000). Copy to canvas panel if available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Expenses by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Categories: \", categoryLabels.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 52\n          }, this), \"Amounts: \", categoryData.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 47\n          }, this), \"(Bar Chart: Use JSON below in canvas panel if supported)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: `{\n  \"type\": \"bar\",\n  \"data\": {\n    \"labels\": ${JSON.stringify(categoryLabels)},\n    \"datasets\": [{\n      \"label\": \"Expenses\",\n      \"data\": ${JSON.stringify(categoryData)},\n      \"backgroundColor\": [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      \"borderColor\": [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      \"borderWidth\": 1\n    }]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"beginAtZero\": true,\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Amount ($)\"\n        }\n      }\n    },\n    \"plugins\": {\n      \"legend\": {\n        \"position\": \"top\"\n      },\n      \"title\": {\n        \"display\": true,\n        \"text\": \"Expenses by Category\"\n      }\n    }\n  }\n}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Expenses by Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dates: \", dateLabels.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 43\n          }, this), \"Amounts: \", dateData.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 43\n          }, this), \"(Line Chart: Use JSON below in canvas panel if supported)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: `{\n  \"type\": \"line\",\n  \"data\": {\n    \"labels\": ${JSON.stringify(dateLabels)},\n    \"datasets\": [{\n      \"label\": \"Expenses\",\n      \"data\": ${JSON.stringify(dateData)},\n      \"fill\": false,\n      \"borderColor\": \"#FF6384\",\n      \"tension\": 0.1\n    }]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"beginAtZero\": true,\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Amount ($)\"\n        }\n      },\n      \"x\": {\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Date\"\n        }\n      }\n    },\n    \"plugins\": {\n      \"legend\": {\n        \"position\": \"top\"\n      },\n      \"title\": {\n        \"display\": true,\n        \"text\": \"Expenses by Date\"\n      }\n    }\n  }\n}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Note: If the canvas panel is not visible, check your Grok 3 UI settings.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Filter by Date Range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchTransactions,\n        children: \"Apply Filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n        onTransactionsUpdate: setTransactions,\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"mK9QKKBFQxtErz/zUFA6NfDsWuI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","TransactionForm","TransactionList","getTransactions","jsxDEV","_jsxDEV","Dashboard","_s","transactions","setTransactions","startDate","setStartDate","endDate","setEndDate","fetchTransactions","response","page","console","log","JSON","stringify","error","expensesByCategory","filter","t","type","map","amount","Math","min","abs","reduce","acc","category","categoryLabels","Object","keys","categoryData","values","expensesByDate","date","Date","toLocaleDateString","dateLabels","sort","dateData","children","className","onAdd","fileName","_jsxFileName","lineNumber","columnNumber","join","value","onChange","e","target","onClick","onTransactionsUpdate","_c","$RefreshReg$"],"sources":["C:/Users/mohit/OneDrive/Desktop/finance_tracker_main/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport TransactionForm from '../components/TransactionForm';\nimport TransactionList from '../components/TransactionList';\nimport { getTransactions } from '../services/transactionService';\n\nfunction Dashboard() {\n  const [transactions, setTransactions] = useState([]);\n  const [startDate, setStartDate] = useState('2025-07-01');\n  const [endDate, setEndDate] = useState('2025-07-07'); // Extended to ensure 7/6/2025 is included\n\n  useEffect(() => {\n    fetchTransactions();\n  }, [startDate, endDate]);\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await getTransactions({ page: 1, startDate, endDate });\n      console.log('Dashboard.jsx: Fetched transactions:', JSON.stringify(response.transactions, null, 2)); // Detailed debug log\n      setTransactions(response.transactions || []);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n\n  // Prepare data for Expenses by Category (Bar Chart) with cap\n  const expensesByCategory = transactions\n    .filter(t => t.type === 'expense')\n    .map(t => ({ ...t, amount: Math.min(Math.abs(t.amount), 10000) * (t.amount < 0 ? -1 : 1) })) // Cap and preserve sign\n    .reduce((acc, t) => {\n      acc[t.category] = (acc[t.category] || 0) + t.amount;\n      return acc;\n    }, {});\n  const categoryLabels = Object.keys(expensesByCategory);\n  const categoryData = Object.values(expensesByCategory);\n\n  // Prepare data for Expenses by Date (Line Chart) with cap\n  const expensesByDate = transactions\n    .filter(t => t.type === 'expense')\n    .map(t => ({ ...t, amount: Math.min(Math.abs(t.amount), 10000) * (t.amount < 0 ? -1 : 1) })) // Cap and preserve sign\n    .reduce((acc, t) => {\n      const date = new Date(t.date).toLocaleDateString();\n      acc[date] = (acc[date] || 0) + t.amount;\n      return acc;\n    }, {});\n  const dateLabels = Object.keys(expensesByDate).sort();\n  const dateData = Object.values(expensesByDate);\n\n  return (\n    <div>\n      <div className=\"grid\">\n        <div className=\"card\">\n          <TransactionForm onAdd={fetchTransactions} />\n        </div>\n        <div className=\"card\">\n          <h3>Charts (Static Preview)</h3>\n          <p>Charts cannot be rendered interactively due to canvas panel limitations. Below are static previews based on capped data (max 10,000). Copy to canvas panel if available.</p>\n          <h4>Expenses by Category</h4>\n          <p>\n            Categories: {categoryLabels.join(', ')}<br />\n            Amounts: {categoryData.join(', ')}<br />\n            (Bar Chart: Use JSON below in canvas panel if supported)\n          </p>\n          <pre>\n{`{\n  \"type\": \"bar\",\n  \"data\": {\n    \"labels\": ${JSON.stringify(categoryLabels)},\n    \"datasets\": [{\n      \"label\": \"Expenses\",\n      \"data\": ${JSON.stringify(categoryData)},\n      \"backgroundColor\": [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      \"borderColor\": [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      \"borderWidth\": 1\n    }]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"beginAtZero\": true,\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Amount ($)\"\n        }\n      }\n    },\n    \"plugins\": {\n      \"legend\": {\n        \"position\": \"top\"\n      },\n      \"title\": {\n        \"display\": true,\n        \"text\": \"Expenses by Category\"\n      }\n    }\n  }\n}`}\n          </pre>\n          <h4>Expenses by Date</h4>\n          <p>\n            Dates: {dateLabels.join(', ')}<br />\n            Amounts: {dateData.join(', ')}<br />\n            (Line Chart: Use JSON below in canvas panel if supported)\n          </p>\n          <pre>\n{`{\n  \"type\": \"line\",\n  \"data\": {\n    \"labels\": ${JSON.stringify(dateLabels)},\n    \"datasets\": [{\n      \"label\": \"Expenses\",\n      \"data\": ${JSON.stringify(dateData)},\n      \"fill\": false,\n      \"borderColor\": \"#FF6384\",\n      \"tension\": 0.1\n    }]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"beginAtZero\": true,\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Amount ($)\"\n        }\n      },\n      \"x\": {\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Date\"\n        }\n      }\n    },\n    \"plugins\": {\n      \"legend\": {\n        \"position\": \"top\"\n      },\n      \"title\": {\n        \"display\": true,\n        \"text\": \"Expenses by Date\"\n      }\n    }\n  }\n}`}\n          </pre>\n          <p>Note: If the canvas panel is not visible, check your Grok 3 UI settings.</p>\n        </div>\n      </div>\n      <div className=\"card\">\n        <h3>Filter by Date Range</h3>\n        <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n        <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n        <button onClick={fetchTransactions}>Apply Filter</button>\n        <TransactionList onTransactionsUpdate={setTransactions} transactions={transactions} />\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,SAASC,eAAe,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,YAAY,CAAC;EACxD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;;EAEtDC,SAAS,CAAC,MAAM;IACdc,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACJ,SAAS,EAAEE,OAAO,CAAC,CAAC;EAExB,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,eAAe,CAAC;QAAEa,IAAI,EAAE,CAAC;QAAEN,SAAS;QAAEE;MAAQ,CAAC,CAAC;MACvEK,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEC,IAAI,CAACC,SAAS,CAACL,QAAQ,CAACP,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACrGC,eAAe,CAACM,QAAQ,CAACP,YAAY,IAAI,EAAE,CAAC;IAC9C,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGd,YAAY,CACpCe,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,SAAS,CAAC,CACjCC,GAAG,CAACF,CAAC,KAAK;IAAE,GAAGA,CAAC;IAAEG,MAAM,EAAEC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACN,CAAC,CAACG,MAAM,CAAC,EAAE,KAAK,CAAC,IAAIH,CAAC,CAACG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAAE,CAAC,CAAC,CAAC,CAAC;EAAA,CAC5FI,MAAM,CAAC,CAACC,GAAG,EAAER,CAAC,KAAK;IAClBQ,GAAG,CAACR,CAAC,CAACS,QAAQ,CAAC,GAAG,CAACD,GAAG,CAACR,CAAC,CAACS,QAAQ,CAAC,IAAI,CAAC,IAAIT,CAAC,CAACG,MAAM;IACnD,OAAOK,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,MAAME,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACd,kBAAkB,CAAC;EACtD,MAAMe,YAAY,GAAGF,MAAM,CAACG,MAAM,CAAChB,kBAAkB,CAAC;;EAEtD;EACA,MAAMiB,cAAc,GAAG/B,YAAY,CAChCe,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAK,SAAS,CAAC,CACjCC,GAAG,CAACF,CAAC,KAAK;IAAE,GAAGA,CAAC;IAAEG,MAAM,EAAEC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACN,CAAC,CAACG,MAAM,CAAC,EAAE,KAAK,CAAC,IAAIH,CAAC,CAACG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;EAAE,CAAC,CAAC,CAAC,CAAC;EAAA,CAC5FI,MAAM,CAAC,CAACC,GAAG,EAAER,CAAC,KAAK;IAClB,MAAMgB,IAAI,GAAG,IAAIC,IAAI,CAACjB,CAAC,CAACgB,IAAI,CAAC,CAACE,kBAAkB,CAAC,CAAC;IAClDV,GAAG,CAACQ,IAAI,CAAC,GAAG,CAACR,GAAG,CAACQ,IAAI,CAAC,IAAI,CAAC,IAAIhB,CAAC,CAACG,MAAM;IACvC,OAAOK,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,MAAMW,UAAU,GAAGR,MAAM,CAACC,IAAI,CAACG,cAAc,CAAC,CAACK,IAAI,CAAC,CAAC;EACrD,MAAMC,QAAQ,GAAGV,MAAM,CAACG,MAAM,CAACC,cAAc,CAAC;EAE9C,oBACElC,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAK0C,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBzC,OAAA;QAAK0C,SAAS,EAAC,MAAM;QAAAD,QAAA,eACnBzC,OAAA,CAACJ,eAAe;UAAC+C,KAAK,EAAElC;QAAkB;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACN/C,OAAA;QAAK0C,SAAS,EAAC,MAAM;QAAAD,QAAA,gBACnBzC,OAAA;UAAAyC,QAAA,EAAI;QAAuB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChC/C,OAAA;UAAAyC,QAAA,EAAG;QAAwK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC/K/C,OAAA;UAAAyC,QAAA,EAAI;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7B/C,OAAA;UAAAyC,QAAA,GAAG,cACW,EAACZ,cAAc,CAACmB,IAAI,CAAC,IAAI,CAAC,eAAChD,OAAA;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,aACpC,EAACf,YAAY,CAACgB,IAAI,CAAC,IAAI,CAAC,eAAChD,OAAA;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,4DAE1C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ/C,OAAA;UAAAyC,QAAA,EACT;AACD;AACA;AACA,gBAAgB3B,IAAI,CAACC,SAAS,CAACc,cAAc,CAAC;AAC9C;AACA;AACA,gBAAgBf,IAAI,CAACC,SAAS,CAACiB,YAAY,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAAE;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACa,CAAC,eACN/C,OAAA;UAAAyC,QAAA,EAAI;QAAgB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzB/C,OAAA;UAAAyC,QAAA,GAAG,SACM,EAACH,UAAU,CAACU,IAAI,CAAC,IAAI,CAAC,eAAChD,OAAA;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,aAC3B,EAACP,QAAQ,CAACQ,IAAI,CAAC,IAAI,CAAC,eAAChD,OAAA;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,6DAEtC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJ/C,OAAA;UAAAyC,QAAA,EACT;AACD;AACA;AACA,gBAAgB3B,IAAI,CAACC,SAAS,CAACuB,UAAU,CAAC;AAC1C;AACA;AACA,gBAAgBxB,IAAI,CAACC,SAAS,CAACyB,QAAQ,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACa,CAAC,eACN/C,OAAA;UAAAyC,QAAA,EAAG;QAAwE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN/C,OAAA;MAAK0C,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBzC,OAAA;QAAAyC,QAAA,EAAI;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B/C,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAAC6B,KAAK,EAAE5C,SAAU;QAAC6C,QAAQ,EAAGC,CAAC,IAAK7C,YAAY,CAAC6C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtF/C,OAAA;QAAOoB,IAAI,EAAC,MAAM;QAAC6B,KAAK,EAAE1C,OAAQ;QAAC2C,QAAQ,EAAGC,CAAC,IAAK3C,UAAU,CAAC2C,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClF/C,OAAA;QAAQqD,OAAO,EAAE5C,iBAAkB;QAAAgC,QAAA,EAAC;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzD/C,OAAA,CAACH,eAAe;QAACyD,oBAAoB,EAAElD,eAAgB;QAACD,YAAY,EAAEA;MAAa;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC7C,EAAA,CAvJQD,SAAS;AAAAsD,EAAA,GAATtD,SAAS;AAyJlB,eAAeA,SAAS;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}