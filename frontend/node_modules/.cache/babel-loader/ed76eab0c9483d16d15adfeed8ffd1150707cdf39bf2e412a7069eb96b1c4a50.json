{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\OneDrive\\\\Desktop\\\\finance_tracker_main\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getTransactions, createTransaction } from '../services/transactionService';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend);\nfunction Dashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [summary, setSummary] = useState([]);\n  const [startDate, setStartDate] = useState('2025-07-01');\n  const [endDate, setEndDate] = useState('2025-07-06');\n  const [newTransaction, setNewTransaction] = useState({\n    type: 'expense',\n    amount: '',\n    category: '',\n    date: '',\n    description: ''\n  });\n  useEffect(() => {\n    fetchData();\n  }, [startDate, endDate]);\n  const fetchData = async () => {\n    try {\n      const data = await getTransactions({\n        page: 1,\n        startDate,\n        endDate\n      });\n      setTransactions(data.transactions || []);\n      setSummary(data.summary || []);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n  const handleInputChange = e => {\n    setNewTransaction({\n      ...newTransaction,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const transactionData = {\n        ...newTransaction,\n        amount: parseFloat(newTransaction.amount) || 0,\n        date: new Date(newTransaction.date).toISOString()\n      };\n      await createTransaction(transactionData);\n      setNewTransaction({\n        type: 'expense',\n        amount: '',\n        category: '',\n        date: '',\n        description: ''\n      });\n      fetchData();\n    } catch (error) {\n      console.error('Error creating transaction:', error);\n    }\n  };\n\n  // Prepare data for Expenses by Category with cap and count capped instances\n  const expensesByCategory = transactions.filter(t => t.type === 'expense').map(t => {\n    const cappedAmount = Math.min(Math.abs(t.amount), 10000) * (t.amount < 0 ? -1 : 1);\n    return {\n      ...t,\n      amount: cappedAmount,\n      isCapped: Math.abs(t.amount) > 10000\n    };\n  }).reduce((acc, t) => {\n    acc[t.category] = (acc[t.category] || 0) + t.amount;\n    if (t.isCapped) acc[`${t.category}_capped`] = (acc[`${t.category}_capped`] || 0) + 1;\n    return acc;\n  }, {});\n  const categoryLabels = Object.keys(expensesByCategory).filter(key => !key.endsWith('_capped'));\n  const categoryData = categoryLabels.map(key => expensesByCategory[key]);\n  const cappedCounts = Object.entries(expensesByCategory).filter(([key]) => key.endsWith('_capped')).reduce((acc, [key, value]) => {\n    acc[key.replace('_capped', '')] = value;\n    return acc;\n  }, {});\n\n  // Prepare data for Expenses by Date with cap and count capped instances\n  const expensesByDate = transactions.filter(t => t.type === 'expense').map(t => {\n    const cappedAmount = Math.min(Math.abs(t.amount), 10000) * (t.amount < 0 ? -1 : 1);\n    return {\n      ...t,\n      amount: cappedAmount,\n      isCapped: Math.abs(t.amount) > 10000\n    };\n  }).reduce((acc, t) => {\n    const date = new Date(t.date).toLocaleDateString();\n    acc[date] = (acc[date] || 0) + t.amount;\n    if (t.isCapped) acc[`${date}_capped`] = (acc[`${date}_capped`] || 0) + 1;\n    return acc;\n  }, {});\n  const dateLabels = Object.keys(expensesByDate).filter(key => !key.endsWith('_capped')).sort();\n  const dateData = dateLabels.map(key => expensesByDate[key]);\n  const dateCappedCounts = Object.entries(expensesByDate).filter(([key]) => key.endsWith('_capped')).reduce((acc, [key, value]) => {\n    acc[key.replace('_capped', '')] = value;\n    return acc;\n  }, {});\n  const categoryChartData = {\n    labels: categoryLabels,\n    datasets: [{\n      label: 'Expenses',\n      data: categoryData,\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n      borderColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n      borderWidth: 1\n    }]\n  };\n  const dateChartData = {\n    labels: dateLabels,\n    datasets: [{\n      label: 'Expenses',\n      data: dateData,\n      fill: false,\n      borderColor: '#FF6384',\n      tension: 0.1\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Amount ($)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: ''\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Entry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        value: newTransaction.type,\n        onChange: handleInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"income\",\n          children: \"Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        value: newTransaction.amount,\n        onChange: handleInputChange,\n        placeholder: \"Amount\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"category\",\n        value: newTransaction.category,\n        onChange: handleInputChange,\n        placeholder: \"Category\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: newTransaction.date,\n        onChange: handleInputChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        value: newTransaction.description,\n        onChange: handleInputChange,\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Filter by Date Range\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: startDate,\n      onChange: e => setStartDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: endDate,\n      onChange: e => setEndDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      children: \"Apply Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(t => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(t.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.type.charAt(0).toUpperCase() + t.type.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.type === 'expense' ? `-${Math.min(Math.abs(t.amount), 10000)}` : t.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, t._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Monthly Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), summary.length > 0 ? summary.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-item\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Month: \", s._id, \", Income: $\", s.totalIncome.toFixed(2), \", Expenses: $\", Math.min(s.totalExpenses, 10000).toFixed(2), \", Savings: $\", (s.totalIncome - Math.min(s.totalExpenses, 10000)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this)\n    }, s._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No summary data available. Ensure backend provides summary or adjust endpoint.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Expenses by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: categoryChartData,\n      options: {\n        ...chartOptions,\n        plugins: {\n          ...chartOptions.plugins,\n          title: {\n            text: 'Expenses by Category'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capped instances: \", Object.entries(cappedCounts).map(([cat, count]) => `${cat}: ${count}`).join(', ') || 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Expenses by Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: dateChartData,\n      options: {\n        ...chartOptions,\n        scales: {\n          ...chartOptions.scales,\n          x: {\n            title: {\n              display: true,\n              text: 'Date'\n            }\n          }\n        },\n        plugins: {\n          ...chartOptions.plugins,\n          title: {\n            text: 'Expenses by Date'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Capped instances: \", Object.entries(dateCappedCounts).map(([date, count]) => `${date}: ${count}`).join(', ') || 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"fKBP6vcRMQFmr7LKJyUhit3J3Gk=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","getTransactions","createTransaction","Bar","Line","Chart","ChartJS","CategoryScale","LinearScale","BarElement","LineElement","PointElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","transactions","setTransactions","summary","setSummary","startDate","setStartDate","endDate","setEndDate","newTransaction","setNewTransaction","type","amount","category","date","description","fetchData","data","page","error","console","handleInputChange","e","target","name","value","handleSubmit","preventDefault","transactionData","parseFloat","Date","toISOString","expensesByCategory","filter","t","map","cappedAmount","Math","min","abs","isCapped","reduce","acc","categoryLabels","Object","keys","key","endsWith","categoryData","cappedCounts","entries","replace","expensesByDate","toLocaleDateString","dateLabels","sort","dateData","dateCappedCounts","categoryChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","dateChartData","fill","tension","chartOptions","scales","y","beginAtZero","title","display","text","plugins","legend","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","onClick","charAt","toUpperCase","slice","_id","length","s","totalIncome","toFixed","totalExpenses","options","cat","count","join","x","_c","$RefreshReg$"],"sources":["C:/Users/mohit/OneDrive/Desktop/finance_tracker_main/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getTransactions, createTransaction } from '../services/transactionService';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  LineElement,\n  PointElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(CategoryScale, LinearScale, BarElement, LineElement, PointElement, Title, Tooltip, Legend);\n\nfunction Dashboard() {\n  const [transactions, setTransactions] = useState([]);\n  const [summary, setSummary] = useState([]);\n  const [startDate, setStartDate] = useState('2025-07-01');\n  const [endDate, setEndDate] = useState('2025-07-06');\n  const [newTransaction, setNewTransaction] = useState({ type: 'expense', amount: '', category: '', date: '', description: '' });\n\n  useEffect(() => {\n    fetchData();\n  }, [startDate, endDate]);\n\n  const fetchData = async () => {\n    try {\n      const data = await getTransactions({ page: 1, startDate, endDate });\n      setTransactions(data.transactions || []);\n      setSummary(data.summary || []);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setNewTransaction({ ...newTransaction, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const transactionData = {\n        ...newTransaction,\n        amount: parseFloat(newTransaction.amount) || 0,\n        date: new Date(newTransaction.date).toISOString(),\n      };\n      await createTransaction(transactionData);\n      setNewTransaction({ type: 'expense', amount: '', category: '', date: '', description: '' });\n      fetchData();\n    } catch (error) {\n      console.error('Error creating transaction:', error);\n    }\n  };\n\n  // Prepare data for Expenses by Category with cap and count capped instances\n  const expensesByCategory = transactions\n    .filter(t => t.type === 'expense')\n    .map(t => {\n      const cappedAmount = Math.min(Math.abs(t.amount), 10000) * (t.amount < 0 ? -1 : 1);\n      return { ...t, amount: cappedAmount, isCapped: Math.abs(t.amount) > 10000 };\n    })\n    .reduce((acc, t) => {\n      acc[t.category] = (acc[t.category] || 0) + t.amount;\n      if (t.isCapped) acc[`${t.category}_capped`] = (acc[`${t.category}_capped`] || 0) + 1;\n      return acc;\n    }, {});\n  const categoryLabels = Object.keys(expensesByCategory).filter(key => !key.endsWith('_capped'));\n  const categoryData = categoryLabels.map(key => expensesByCategory[key]);\n  const cappedCounts = Object.entries(expensesByCategory)\n    .filter(([key]) => key.endsWith('_capped'))\n    .reduce((acc, [key, value]) => {\n      acc[key.replace('_capped', '')] = value;\n      return acc;\n    }, {});\n\n  // Prepare data for Expenses by Date with cap and count capped instances\n  const expensesByDate = transactions\n    .filter(t => t.type === 'expense')\n    .map(t => {\n      const cappedAmount = Math.min(Math.abs(t.amount), 10000) * (t.amount < 0 ? -1 : 1);\n      return { ...t, amount: cappedAmount, isCapped: Math.abs(t.amount) > 10000 };\n    })\n    .reduce((acc, t) => {\n      const date = new Date(t.date).toLocaleDateString();\n      acc[date] = (acc[date] || 0) + t.amount;\n      if (t.isCapped) acc[`${date}_capped`] = (acc[`${date}_capped`] || 0) + 1;\n      return acc;\n    }, {});\n  const dateLabels = Object.keys(expensesByDate).filter(key => !key.endsWith('_capped')).sort();\n  const dateData = dateLabels.map(key => expensesByDate[key]);\n  const dateCappedCounts = Object.entries(expensesByDate)\n    .filter(([key]) => key.endsWith('_capped'))\n    .reduce((acc, [key, value]) => {\n      acc[key.replace('_capped', '')] = value;\n      return acc;\n    }, {});\n\n  const categoryChartData = {\n    labels: categoryLabels,\n    datasets: [{\n      label: 'Expenses',\n      data: categoryData,\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n      borderColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],\n      borderWidth: 1,\n    }],\n  };\n\n  const dateChartData = {\n    labels: dateLabels,\n    datasets: [{\n      label: 'Expenses',\n      data: dateData,\n      fill: false,\n      borderColor: '#FF6384',\n      tension: 0.1,\n    }],\n  };\n\n  const chartOptions = {\n    scales: { y: { beginAtZero: true, title: { display: true, text: 'Amount ($)' } } },\n    plugins: { legend: { position: 'top' }, title: { display: true, text: '' } },\n  };\n\n  return (\n    <div className=\"card\">\n      <h2 className=\"form-title\">Dashboard</h2>\n      <h3>Create New Entry</h3>\n      <form onSubmit={handleSubmit}>\n        <select name=\"type\" value={newTransaction.type} onChange={handleInputChange}>\n          <option value=\"expense\">Expense</option>\n          <option value=\"income\">Income</option>\n        </select>\n        <input type=\"number\" name=\"amount\" value={newTransaction.amount} onChange={handleInputChange} placeholder=\"Amount\" required />\n        <input type=\"text\" name=\"category\" value={newTransaction.category} onChange={handleInputChange} placeholder=\"Category\" required />\n        <input type=\"date\" name=\"date\" value={newTransaction.date} onChange={handleInputChange} required />\n        <input type=\"text\" name=\"description\" value={newTransaction.description} onChange={handleInputChange} placeholder=\"Description\" />\n        <button type=\"submit\">Add Entry</button>\n      </form>\n      <h3>Filter by Date Range</h3>\n      <input type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} />\n      <input type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} />\n      <button onClick={fetchData}>Apply Filter</button>\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Category</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions.map(t => (\n            <tr key={t._id}>\n              <td>{new Date(t.date).toLocaleDateString()}</td>\n              <td>{t.type.charAt(0).toUpperCase() + t.type.slice(1)}</td>\n              <td>{t.type === 'expense' ? `-${Math.min(Math.abs(t.amount), 10000)}` : t.amount}</td>\n              <td>{t.category}</td>\n              <td>{t.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h3>Monthly Summary</h3>\n      {summary.length > 0 ? (\n        summary.map(s => (\n          <div key={s._id} className=\"summary-item\">\n            <p>\n              Month: {s._id}, Income: ${s.totalIncome.toFixed(2)}, Expenses: ${Math.min(s.totalExpenses, 10000).toFixed(2)}, Savings: ${(s.totalIncome - Math.min(s.totalExpenses, 10000)).toFixed(2)}\n            </p>\n          </div>\n        ))\n      ) : (\n        <p>No summary data available. Ensure backend provides summary or adjust endpoint.</p>\n      )}\n      <h3>Charts</h3>\n      <h4>Expenses by Category</h4>\n      <Bar data={categoryChartData} options={{ ...chartOptions, plugins: { ...chartOptions.plugins, title: { text: 'Expenses by Category' } } }} />\n      <p>Capped instances: {Object.entries(cappedCounts).map(([cat, count]) => `${cat}: ${count}`).join(', ') || 'None'}</p>\n      <h4>Expenses by Date</h4>\n      <Line data={dateChartData} options={{ ...chartOptions, scales: { ...chartOptions.scales, x: { title: { display: true, text: 'Date' } } }, plugins: { ...chartOptions.plugins, title: { text: 'Expenses by Date' } } }} />\n      <p>Capped instances: {Object.entries(dateCappedCounts).map(([date, count]) => `${date}: ${count}`).join(', ') || 'None'}</p>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}