{"ast":null,"code":"import api, { setAuthToken } from './api';\nexport const getTransactions = async (params = {}) => {\n  console.log('transactionService.js: Sending GET request with headers:', api.defaults.headers.common, 'Params:', params);\n  const response = await api.get('/api/transactions/transactions', {\n    params\n  });\n  console.log('transactionService.js: GET response:', response.data);\n  return response.data;\n};\nexport const createTransaction = async transaction => {\n  console.log('transactionService.js: Sending POST request with headers:', api.defaults.headers.common, 'Data:', transaction);\n  try {\n    const response = await api.post('/api/transactions/transactions', transaction);\n    console.log('transactionService.js: POST response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('transactionService.js: POST error:', error.response ? error.response.data : error.message);\n    throw error; // Re-throw to be caught by the caller\n  }\n};\nexport const uploadReceipt = async file => {\n  console.log('transactionService.js: Uploading file object:', file, 'Initial headers:', api.defaults.headers);\n  const formData = new FormData();\n  formData.append('file', file);\n  console.log('transactionService.js: FormData entries:', [...formData.entries()]);\n  const response = await api.post('/api/upload/receipt', formData);\n  console.log('transactionService.js: Upload response:', response.data);\n  return response.data;\n};\nexport const getTransactionSummary = async () => {\n  console.log('transactionService.js: Fetching transaction summary');\n  const response = await api.get('/api/transactions/summary');\n  console.log('transactionService.js: Summary response:', response.data);\n  return response.data;\n};","map":{"version":3,"names":["api","setAuthToken","getTransactions","params","console","log","defaults","headers","common","response","get","data","createTransaction","transaction","post","error","message","uploadReceipt","file","formData","FormData","append","entries","getTransactionSummary"],"sources":["C:/Users/mohit/OneDrive/Desktop/finance_tracker_main/frontend/src/services/transactionService.js"],"sourcesContent":["import api, { setAuthToken } from './api';\n\nexport const getTransactions = async (params = {}) => {\n  console.log('transactionService.js: Sending GET request with headers:', api.defaults.headers.common, 'Params:', params);\n  const response = await api.get('/api/transactions/transactions', { params });\n  console.log('transactionService.js: GET response:', response.data);\n  return response.data;\n};\n\nexport const createTransaction = async (transaction) => {\n  console.log('transactionService.js: Sending POST request with headers:', api.defaults.headers.common, 'Data:', transaction);\n  try {\n    const response = await api.post('/api/transactions/transactions', transaction);\n    console.log('transactionService.js: POST response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('transactionService.js: POST error:', error.response ? error.response.data : error.message);\n    throw error; // Re-throw to be caught by the caller\n  }\n};\n\nexport const uploadReceipt = async (file) => {\n  console.log('transactionService.js: Uploading file object:', file, 'Initial headers:', api.defaults.headers);\n  const formData = new FormData();\n  formData.append('file', file);\n  console.log('transactionService.js: FormData entries:', [...formData.entries()]);\n  const response = await api.post('/api/upload/receipt', formData);\n  console.log('transactionService.js: Upload response:', response.data);\n  return response.data;\n};\n\nexport const getTransactionSummary = async () => {\n  console.log('transactionService.js: Fetching transaction summary');\n  const response = await api.get('/api/transactions/summary');\n  console.log('transactionService.js: Summary response:', response.data);\n  return response.data;\n};"],"mappings":"AAAA,OAAOA,GAAG,IAAIC,YAAY,QAAQ,OAAO;AAEzC,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,MAAM,GAAG,CAAC,CAAC,KAAK;EACpDC,OAAO,CAACC,GAAG,CAAC,0DAA0D,EAAEL,GAAG,CAACM,QAAQ,CAACC,OAAO,CAACC,MAAM,EAAE,SAAS,EAAEL,MAAM,CAAC;EACvH,MAAMM,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,gCAAgC,EAAE;IAAEP;EAAO,CAAC,CAAC;EAC5EC,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEI,QAAQ,CAACE,IAAI,CAAC;EAClE,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,WAAW,IAAK;EACtDT,OAAO,CAACC,GAAG,CAAC,2DAA2D,EAAEL,GAAG,CAACM,QAAQ,CAACC,OAAO,CAACC,MAAM,EAAE,OAAO,EAAEK,WAAW,CAAC;EAC3H,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMT,GAAG,CAACc,IAAI,CAAC,gCAAgC,EAAED,WAAW,CAAC;IAC9ET,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEI,QAAQ,CAACE,IAAI,CAAC;IACnE,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdX,OAAO,CAACW,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACE,IAAI,GAAGI,KAAK,CAACC,OAAO,CAAC;IACzG,MAAMD,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,IAAI,IAAK;EAC3Cd,OAAO,CAACC,GAAG,CAAC,+CAA+C,EAAEa,IAAI,EAAE,kBAAkB,EAAElB,GAAG,CAACM,QAAQ,CAACC,OAAO,CAAC;EAC5G,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;EAC7Bd,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAE,CAAC,GAAGc,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC;EAChF,MAAMb,QAAQ,GAAG,MAAMT,GAAG,CAACc,IAAI,CAAC,qBAAqB,EAAEK,QAAQ,CAAC;EAChEf,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEI,QAAQ,CAACE,IAAI,CAAC;EACrE,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMY,qBAAqB,GAAG,MAAAA,CAAA,KAAY;EAC/CnB,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;EAClE,MAAMI,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,2BAA2B,CAAC;EAC3DN,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEI,QAAQ,CAACE,IAAI,CAAC;EACtE,OAAOF,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}