{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohit\\\\OneDrive\\\\Desktop\\\\finance_tracker_main\\\\frontend\\\\src\\\\pages\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getTransactions } from '../services/transactionService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [summary, setSummary] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getTransactions({\n          page: 1,\n          startDate: '2025-07-01',\n          endDate: '2025-07-06'\n        });\n        setTransactions(data.transactions || []);\n        setSummary(data.summary || []);\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Prepare data for Expenses by Category (Bar Chart) with cap\n  const expensesByCategory = transactions.filter(t => t.type === 'expense').reduce((acc, t) => {\n    const cappedAmount = Math.min(t.amount, 10000); // Cap at 10,000 to avoid outliers\n    acc[t.category] = (acc[t.category] || 0) + (cappedAmount < 0 ? -cappedAmount : cappedAmount);\n    return acc;\n  }, {});\n  const categoryLabels = Object.keys(expensesByCategory);\n  const categoryData = Object.values(expensesByCategory);\n\n  // Prepare data for Expenses by Date (Line Chart) with cap\n  const expensesByDate = transactions.filter(t => t.type === 'expense').reduce((acc, t) => {\n    const cappedAmount = Math.min(t.amount, 10000); // Cap at 10,000 to avoid outliers\n    const date = new Date(t.date).toLocaleDateString();\n    acc[date] = (acc[date] || 0) + (cappedAmount < 0 ? -cappedAmount : cappedAmount);\n    return acc;\n  }, {});\n  const dateLabels = Object.keys(expensesByDate).sort();\n  const dateData = Object.values(expensesByDate);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(t => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(t.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.type.charAt(0).toUpperCase() + t.type.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.type === 'expense' ? `-${Math.min(Math.abs(t.amount), 10000)}` : t.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, t._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Monthly Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), summary.length > 0 ? summary.map(s => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-item\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Month: \", s._id, \", Income: $\", s.totalIncome.toFixed(2), \", Expenses: $\", Math.min(s.totalExpenses, 10000).toFixed(2), \", Savings: $\", (s.totalIncome - Math.min(s.totalExpenses, 10000)).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, s._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No summary data available. Ensure backend provides summary.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Charts (Static Preview)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Charts cannot be rendered interactively due to canvas panel limitations. Below are static previews based on capped data (max 10,000). Copy to canvas panel if available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Expenses by Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Categories: \", categoryLabels.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 48\n      }, this), \"Amounts: \", categoryData.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 43\n      }, this), \"(Bar Chart: Use JSON below in canvas panel if supported)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: `{\n  \"type\": \"bar\",\n  \"data\": {\n    \"labels\": ${JSON.stringify(categoryLabels)},\n    \"datasets\": [{\n      \"label\": \"Expenses\",\n      \"data\": ${JSON.stringify(categoryData)},\n      \"backgroundColor\": [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      \"borderColor\": [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      \"borderWidth\": 1\n    }]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"beginAtZero\": true,\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Amount ($)\"\n        }\n      }\n    },\n    \"plugins\": {\n      \"legend\": {\n        \"position\": \"top\"\n      },\n      \"title\": {\n        \"display\": true,\n        \"text\": \"Expenses by Category\"\n      }\n    }\n  }\n}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Expenses by Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Dates: \", dateLabels.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 39\n      }, this), \"Amounts: \", dateData.join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 39\n      }, this), \"(Line Chart: Use JSON below in canvas panel if supported)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: `{\n  \"type\": \"line\",\n  \"data\": {\n    \"labels\": ${JSON.stringify(dateLabels)},\n    \"datasets\": [{\n      \"label\": \"Expenses\",\n      \"data\": ${JSON.stringify(dateData)},\n      \"fill\": false,\n      \"borderColor\": \"#FF6384\",\n      \"tension\": 0.1\n    }]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"beginAtZero\": true,\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Amount ($)\"\n        }\n      },\n      \"x\": {\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Date\"\n        }\n      }\n    },\n    \"plugins\": {\n      \"legend\": {\n        \"position\": \"top\"\n      },\n      \"title\": {\n        \"display\": true,\n        \"text\": \"Expenses by Date\"\n      }\n    }\n  }\n}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Note: If the canvas panel is not visible, check your Grok 3 UI settings or documentation. For better visualization, consider integrating a charting library like react-chartjs-2 (requires additional setup).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"/N9wCWY6LTWdmtrk6NPeCW/YfI8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","getTransactions","jsxDEV","_jsxDEV","Dashboard","_s","transactions","setTransactions","summary","setSummary","fetchData","data","page","startDate","endDate","error","console","expensesByCategory","filter","t","type","reduce","acc","cappedAmount","Math","min","amount","category","categoryLabels","Object","keys","categoryData","values","expensesByDate","date","Date","toLocaleDateString","dateLabels","sort","dateData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","charAt","toUpperCase","slice","abs","description","_id","length","s","totalIncome","toFixed","totalExpenses","join","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/mohit/OneDrive/Desktop/finance_tracker_main/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getTransactions } from '../services/transactionService';\n\nfunction Dashboard() {\n  const [transactions, setTransactions] = useState([]);\n  const [summary, setSummary] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getTransactions({ page: 1, startDate: '2025-07-01', endDate: '2025-07-06' });\n        setTransactions(data.transactions || []);\n        setSummary(data.summary || []);\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Prepare data for Expenses by Category (Bar Chart) with cap\n  const expensesByCategory = transactions\n    .filter(t => t.type === 'expense')\n    .reduce((acc, t) => {\n      const cappedAmount = Math.min(t.amount, 10000); // Cap at 10,000 to avoid outliers\n      acc[t.category] = (acc[t.category] || 0) + (cappedAmount < 0 ? -cappedAmount : cappedAmount);\n      return acc;\n    }, {});\n  const categoryLabels = Object.keys(expensesByCategory);\n  const categoryData = Object.values(expensesByCategory);\n\n  // Prepare data for Expenses by Date (Line Chart) with cap\n  const expensesByDate = transactions\n    .filter(t => t.type === 'expense')\n    .reduce((acc, t) => {\n      const cappedAmount = Math.min(t.amount, 10000); // Cap at 10,000 to avoid outliers\n      const date = new Date(t.date).toLocaleDateString();\n      acc[date] = (acc[date] || 0) + (cappedAmount < 0 ? -cappedAmount : cappedAmount);\n      return acc;\n    }, {});\n  const dateLabels = Object.keys(expensesByDate).sort();\n  const dateData = Object.values(expensesByDate);\n\n  return (\n    <div className=\"card\">\n      <h2 className=\"form-title\">Dashboard</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Category</th>\n            <th>Description</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions.map(t => (\n            <tr key={t._id}>\n              <td>{new Date(t.date).toLocaleDateString()}</td>\n              <td>{t.type.charAt(0).toUpperCase() + t.type.slice(1)}</td>\n              <td>{t.type === 'expense' ? `-${Math.min(Math.abs(t.amount), 10000)}` : t.amount}</td>\n              <td>{t.category}</td>\n              <td>{t.description}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <h3>Monthly Summary</h3>\n      {summary.length > 0 ? (\n        summary.map(s => (\n          <div key={s._id} className=\"summary-item\">\n            <p>\n              Month: {s._id}, Income: ${s.totalIncome.toFixed(2)}, Expenses: ${Math.min(s.totalExpenses, 10000).toFixed(2)}, Savings: ${(s.totalIncome - Math.min(s.totalExpenses, 10000)).toFixed(2)}\n            </p>\n          </div>\n        ))\n      ) : (\n        <p>No summary data available. Ensure backend provides summary.</p>\n      )}\n      <h3>Charts (Static Preview)</h3>\n      <p>\n        Charts cannot be rendered interactively due to canvas panel limitations. Below are static previews based on capped data (max 10,000). Copy to canvas panel if available.\n      </p>\n      <h4>Expenses by Category</h4>\n      <p>\n        Categories: {categoryLabels.join(', ')}<br />\n        Amounts: {categoryData.join(', ')}<br />\n        (Bar Chart: Use JSON below in canvas panel if supported)\n      </p>\n      <pre>\n{`{\n  \"type\": \"bar\",\n  \"data\": {\n    \"labels\": ${JSON.stringify(categoryLabels)},\n    \"datasets\": [{\n      \"label\": \"Expenses\",\n      \"data\": ${JSON.stringify(categoryData)},\n      \"backgroundColor\": [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      \"borderColor\": [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\", \"#9966FF\"],\n      \"borderWidth\": 1\n    }]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"beginAtZero\": true,\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Amount ($)\"\n        }\n      }\n    },\n    \"plugins\": {\n      \"legend\": {\n        \"position\": \"top\"\n      },\n      \"title\": {\n        \"display\": true,\n        \"text\": \"Expenses by Category\"\n      }\n    }\n  }\n}`}\n      </pre>\n      <h4>Expenses by Date</h4>\n      <p>\n        Dates: {dateLabels.join(', ')}<br />\n        Amounts: {dateData.join(', ')}<br />\n        (Line Chart: Use JSON below in canvas panel if supported)\n      </p>\n      <pre>\n{`{\n  \"type\": \"line\",\n  \"data\": {\n    \"labels\": ${JSON.stringify(dateLabels)},\n    \"datasets\": [{\n      \"label\": \"Expenses\",\n      \"data\": ${JSON.stringify(dateData)},\n      \"fill\": false,\n      \"borderColor\": \"#FF6384\",\n      \"tension\": 0.1\n    }]\n  },\n  \"options\": {\n    \"scales\": {\n      \"y\": {\n        \"beginAtZero\": true,\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Amount ($)\"\n        }\n      },\n      \"x\": {\n        \"title\": {\n          \"display\": true,\n          \"text\": \"Date\"\n        }\n      }\n    },\n    \"plugins\": {\n      \"legend\": {\n        \"position\": \"top\"\n      },\n      \"title\": {\n        \"display\": true,\n        \"text\": \"Expenses by Date\"\n      }\n    }\n  }\n}`}\n      </pre>\n      <p>\n        Note: If the canvas panel is not visible, check your Grok 3 UI settings or documentation. For better visualization, consider integrating a charting library like react-chartjs-2 (requires additional setup).\n      </p>\n    </div>\n  );\n}\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}